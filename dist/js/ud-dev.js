Vue.component("ud-image-upload",{template:'\n    <div class="ud-image-upload">\n      <input type="file" accept="image/*" ref="input" @change="previewImage">\n      <template v-if="preview">\n        <div class="image-preview">\n          <img :src="preview" class="img-fluid" />\n          <div class="image-info">\n            <p>檔案名稱：{{ image.name }}</p>\n            <p>檔案大小：{{ parseInt(image.size/1024) }}KB</p>\n          </div>\n        </div>\n        <ud-button @click="reset">刪除圖片</ud-button>\n      </template>\n    </div>\n  ',data:function(){return{preview:"",image:""}},methods:{previewImage:function(e){var i=this,n=e.target;if(n.files){var t=new FileReader;t.onload=function(e){i.preview=e.target.result},this.image=n.files[0],t.readAsDataURL(n.files[0])}},reset:function(){this.image="",this.preview="",this.$refs.input.value=""}}}),Vue.component("ud-image-upload-multiple",{template:'\n    <div class="ud-image-upload-multiple">\n      <input type="file" accept="image/*" multiple="multiple" ref="input" @change="previewMultiImage">\n      <template v-if="preview_list.length">\n        <div class="image-preview">\n          <div v-for="item, index in preview_list" :key="index">\n            <img :src="item"/>\n            <div class="image-info">\n              <p>檔案名稱：{{ image_list[index].name }}</p>\n              <p>檔案大小：{{ parseInt(image_list[index].size/1024) }}KB</p>\n            </div>\n          </div>\n          <ud-button @click="reset">刪除圖片</ud-button>\n        </div>\n      </template>\n    </div>\n  ',data:function(){return{preview_list:[],image_list:[]}},methods:{previewMultiImage:function(e){var i=this,n=e.target,t=n.files.length,a=0;if(n.files)for(;t--;){var l=new FileReader;l.onload=function(e){i.preview_list.push(e.target.result)},this.image_list.push(n.files[a]),l.readAsDataURL(n.files[a]),a++}},reset:function(){this.image_list=[],this.preview_list=[],this.$refs.input.value=""}}}),Vue.component("ud-contenteditable",{name:"UdContenteditable",template:'\n    <div contenteditable="contenteditable" @input="updateInput" class="ud-contenteditable">\n      {{ content }}\n    </div>\n  ',prop:["value"],data:function(){return{content:""}},methods:{updateInput:function(){this.$emit("input",this.content)}}}),Vue.component("el-button",{template:'\n    <button \n      class="el-button"\n      :class="[\n        type ? \'el-button--\' + type : \'\',\n        size ? \'el-button--\' + size : \'\',\n        {\n          \'is-plain\': plain,\n          \'is-round\': round,\n          \'is-circle\': circle,\n          \'is-disabled\': disabled,\n          \'is-loading\': loading,\n        }\n      ]"\n      :autofocus="autofocus"\n      :disabled="disabled || loading"\n      @click="handleClick"\n    >\n      <el-i class="el-icon-loading" v-if="loading"></el-i>\n      <el-i :class="icon" v-if="icon && !loading"></el-i>\n      <span v-if="$slots.default"><slot></slot></span>\n    </button>\n  ',name:"Button",props:{type:{type:String,default:"default"},size:String,plain:Boolean,round:Boolean,circle:Boolean,icon:{type:String,default:""},autofocus:Boolean,disabled:Boolean,loading:Boolean},methods:{handleClick:function(e){this.$emit("click",e)}}});
//# sourceMappingURL=ud-dev.js.map